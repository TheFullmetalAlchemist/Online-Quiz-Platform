@model Online_Quiz_Platform.Models.Entities.Register

@{
    ViewData["Title"] = "Register";
}

<h2>📝 Register</h2>

<form asp-action="Index" method="post" id="registerForm">
    <div class="form-group mt-3">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" id="Password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" type="password" class="form-control" id="ConfirmPassword" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" id="registerBtn" class="btn btn-primary mt-4" disabled>Register</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const password = document.getElementById("Password");
        const confirmPassword = document.getElementById("ConfirmPassword");
        const registerBtn = document.getElementById("registerBtn");

        function validatePasswords() {
            if (password.value && confirmPassword.value && password.value === confirmPassword.value) {
                registerBtn.disabled = false;
            } else {
                registerBtn.disabled = true;
            }
        }

        password.addEventListener("input", validatePasswords);
        confirmPassword.addEventListener("input", validatePasswords);
    </script>
}
